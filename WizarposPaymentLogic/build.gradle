apply plugin: 'com.android.library'

dependencies {
    compile fileTree(include: '*.jar', dir: 'libs')
    compile 'com.android.support:appcompat-v7:28.0.0'
    compile 'com.android.support:design:28.0.0'
    compile 'com.squareup.okhttp3:okhttp:3.2.0'
    compile 'android:UI:1.1.50'
    compile 'com.yanzhenjie:permission:1.0.5'
    compile project(path: ':libsn3n5printsdk')
    compile project(path: ':libsa920sdk')
    //amp包引入
    provided files('external-libs/sdk.jar')

}

android {
    compileSdkVersion 28
    buildToolsVersion '28.0.3'
    packagingOptions {
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/NOTICE'
        exclude 'M  njv.bggETA-INF/DEPENDENCIES'
        exclude 'META-INF/LICENSE.txt'
    }
    sourceSets {
        main {
            manifest.srcFile 'AndroidManifest.xml'
            java.srcDirs = ['src']
            resources.srcDirs = ['src']
            aidl.srcDirs = ['src']
            renderscript.srcDirs = ['src']
            res.srcDirs = ['res']
            assets.srcDirs = ['assets']
            jniLibs.srcDirs = ['libs']
        }

        // Move the tests to tests/java, tests/res, etc...
        instrumentTest.setRoot('tests')

        // Move the build types to build-types/<type>
        // For instance, build-types/debug/java, build-types/debug/AndroidManifest.xml, ...
        // This moves them out of them default location under src/<type>/... which would
        // conflict with src/ being used by the main source set.
        // Adding new build types or product flavors should be accompanied
        // by a similar customization.
        debug.setRoot('build-types/debug')
        release.setRoot('build-types/release')
    }
    defaultConfig{
        ndk {
            abiFilters "armeabi"
        }
    }
    lintOptions{
        abortOnError false
    }


}
